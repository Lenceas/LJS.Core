<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LJS.Core.Model</name>
    </assembly>
    <members>
        <member name="T:LJS.Core.Model.MessageModel`1">
            <summary>
            通用返回信息类
            </summary>
        </member>
        <member name="P:LJS.Core.Model.MessageModel`1.status">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:LJS.Core.Model.MessageModel`1.success">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:LJS.Core.Model.MessageModel`1.msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:LJS.Core.Model.MessageModel`1.response">
            <summary>
            返回数据集合
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.Id">
            <summary>
            泛型主键
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.IsDeleted">
            <summary>
            逻辑上的删除
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:LJS.Core.Model.BaseEntity.SortId">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Menu">
            <summary>
            菜单表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu.MenuName">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu.ParentMenuId">
            <summary>
            父级菜单
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu.MenuLevel">
            <summary>
            菜单层级
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu.MenuUrl">
            <summary>
            路由
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu.Status">
            <summary>
            状态:1:正常,0:锁定
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Menu_Permission">
            <summary>
            菜单权限关联表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu_Permission.MenuId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Menu_Permission.PermissionId">
            <summary>
            权限ID
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Operation">
            <summary>
            操作表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Operation.OperationName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Operation.Status">
            <summary>
            状态:1:正常,0:锁定
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Operation_Permission">
            <summary>
            操作权限关联表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Operation_Permission.OperationId">
            <summary>
            操作ID
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Operation_Permission.PermissionId">
            <summary>
            权限ID
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Permission">
            <summary>
            权限表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Permission.PermissionName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Permission.ParentPermissionId">
            <summary>
            父级权限
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Permission.Status">
            <summary>
            状态:1:正常,0:锁定
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Role">
            <summary>
            角色表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Role.ParentRoleId">
            <summary>
            父级角色
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Role.Status">
            <summary>
            状态:1:正常,0:锁定
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.Role_Permission">
            <summary>
            角色权限关联表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Role_Permission.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.Role_Permission.PermissionId">
            <summary>
            权限ID
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.TestModel">
            <summary>
            测试模型
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.TestModel.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.User">
            <summary>
            用户表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.LoginName">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.LoginPwd">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.LastLoginTime">
             <summary>
            最后登录时间 
             </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.ErrorCount">
             <summary>
            错误次数 
             </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User.Status">
            <summary>
            状态:1:正常,0:锁定
            </summary>
        </member>
        <member name="T:LJS.Core.Model.Models.User_Role">
            <summary>
            用户角色关联表
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User_Role.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Models.User_Role.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="T:LJS.Core.Model.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:LJS.Core.Model.PageModel`1.page">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:LJS.Core.Model.PageModel`1.pageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:LJS.Core.Model.PageModel`1.dataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:LJS.Core.Model.PageModel`1.pageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:LJS.Core.Model.PageModel`1.data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="M:LJS.Core.Model.Seed.DBSeed.SeedAsync(LJS.Core.Model.Seed.MyContext,System.String)">
            <summary>
            异步添加种子数据 SqlSugar
            </summary>
            <param name="myContext"></param>
            <param name="WebRootPath"></param>
            <returns></returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.DBSeed.SeedAsyncByEFCore(LJS.Core.Model.Seed.MySqlContext,System.String)">
            <summary>
            异步添加种子数据 EF Core
            </summary>
            <param name="mySqlContext"></param>
            <param name="WebRootPath"></param>
            <returns></returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetMainConnectionDb">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Seed.MyContext.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Seed.MyContext.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:LJS.Core.Model.Seed.MyContext.Db">
            <summary>
            数据连接对象 
            </summary>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.#ctor(SqlSugar.ISqlSugarClient)">
            <summary>
            功能描述:构造函数
            </summary>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:LJS.Core.Model.Seed.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="P:LJS.Core.Model.Seed.MySqlContext.TestModels">
            <summary>
            DbSet实体集属性对应数据库中的表(注意实体集名必须与表明一致)
            </summary>
        </member>
        <member name="M:LJS.Core.Model.Seed.MySqlContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            配置数据库连接
            </summary>
            <param name="optionsBuilder"></param>
        </member>
        <member name="M:LJS.Core.Model.Seed.MySqlContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            TODO:当数据库创建完成后，EF 创建一系列数据表，表名默认和 DbSet 属性名相同。 集合属性的名称一般使用复数形式，但不同的开发人员的命名习惯可能不一样，开发人员根据自己的情况确定是否使用复数形式。 在定义 DbSet 属性的代码之后，添加下面代码，对DbContext指定单数的表名来覆盖默认的表名。
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:LJS.Core.Model.ViewModels.TestViewModels">
            <summary>
            测试信息展示类
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.TestViewModels.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.TestViewModels.Name">
            <summary>
            名称 
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.TestViewModels.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.TestViewModels.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.TestViewModels.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:LJS.Core.Model.ViewModels.UserViewModels">
            <summary>
            用户信息展示类
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.UserViewModels.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.UserViewModels.LoginName">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.UserViewModels.LoginPwd">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.UserViewModels.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:LJS.Core.Model.ViewModels.UserViewModels.Remark">
            <summary>
            备注
            </summary>
        </member>
    </members>
</doc>
